include("${CMAKE_CURRENT_LIST_DIR}/GuessCompilerPrefix.cmake")

function(GetExportFilename _ret)
    GUESS_COMPILER_PREFIX(_compiler)
    
    # Check multi-config generators
    if (CMAKE_CONFIGURATION_TYPES AND NOT FORCE_CMAKE_CONFIGURATION_TYPES)
        # Multi-config generators define properties for all configurations
        set(${_ret} "CodePorting.Translator.Cs2Cpp.Framework-targets-${_compiler}.cmake" PARENT_SCOPE)
    else()
        set(${_ret} "CodePorting.Translator.Cs2Cpp.Framework-targets-${CMAKE_BUILD_TYPE}-${_compiler}.cmake" PARENT_SCOPE)
    endif()
endfunction()

function(FindExportFile _ret _dir)
    GUESS_COMPILER_PREFIX(_compiler)
    if(UNIX AND NOT APPLE)
        LIBC_DUMPVERSION(_libc_version)
    endif()
    
    # Check multi-config generators
    if (EXISTS "${_dir}/CodePorting.Translator.Cs2Cpp.Framework-targets-${_compiler}.cmake")
        # Multi-config generators define properties for all configurations
        set(${_ret} "CodePorting.Translator.Cs2Cpp.Framework-targets-${_compiler}.cmake" PARENT_SCOPE)
    elseif(EXISTS "${_dir}/CodePorting.Translator.Cs2Cpp.Framework-targets-${CMAKE_BUILD_TYPE}-${_compiler}.cmake")
        set(${_ret} "CodePorting.Translator.Cs2Cpp.Framework-targets-${CMAKE_BUILD_TYPE}-${_compiler}.cmake" PARENT_SCOPE)
    elseif(UNIX)
        file(GLOB export_files "${_dir}/CodePorting.Translator.Cs2Cpp.Framework-targets-x86_64_libstdcpp_libc*-any.cmake")
        foreach(export_file ${export_files})
            string(REGEX MATCH "_libc[0-9]+(\.[0-9]+)?" libc_version_match ${export_file})
            string(REGEX MATCH "[0-9]+(\.[0-9]+)?" libc_version_match ${libc_version_match})
            list(APPEND available_libc_versions ${libc_version_match})
        endforeach()
        list(SORT available_libc_versions COMPARE NATURAL ORDER ASCENDING)
        set(found 0)
        foreach (available_libc_version ${available_libc_versions})
            if (_libc_version VERSION_GREATER_EQUAL available_libc_version)
                set(${_ret} "CodePorting.Translator.Cs2Cpp.Framework-targets-x86_64_libstdcpp_libc${available_libc_version}.cmake" PARENT_SCOPE)
                message(STATUS "Using libc ${available_libc_version} as the platform uses ${_libc_version}")
                set(found 1)
            endif()
        endforeach()
        if (NOT found)
            message(SEND_ERROR "Can't find CodePorting.Translator.Cs2Cpp.Framework targets file for ${CMAKE_BUILD_TYPE} configuration and ${_compiler} compiler in ${_dir}")
        endif()
    else()
        message(SEND_ERROR "Can't find CodePorting.Translator.Cs2Cpp.Framework targets file for ${CMAKE_BUILD_TYPE} configuration and ${_compiler} compiler in ${_dir}")
    endif()
endfunction()

function(GetInstallFilename _ret)
    GUESS_COMPILER_PREFIX(_compiler)
    if(UNIX AND CMAKE_CXX_COMPILER_ID STREQUAL "Clang" AND CMAKE_BUILD_TYPE EQUAL "RELEASE")
        LIBC_DUMPVERSION(_libc_version)
        set(${_ret} "CodePorting.Translator.Cs2Cpp.Framework-targets-x86_64_libstdcpp_libc${_libc_version}.cmake" PARENT_SCOPE)
    else()
        set(${_ret} "CodePorting.Translator.Cs2Cpp.Framework-targets-${_compiler}.cmake" PARENT_SCOPE)
    endif()
endfunction()

function(ExportAsposeTarget _target)
    GetExportFilename(_exportFile)
    export(TARGETS ${_target} NAMESPACE Aspose:: APPEND FILE "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}/${_exportFile}")
endfunction()